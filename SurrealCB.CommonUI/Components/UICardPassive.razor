<MatTooltip Tooltip="@PassiveService.GetPassiveTuple(p, p1, p2, p3).Item1">
    <div @ref="context.Current" class="uicard-passive">
        <div> <img class="card-icon passive-@PassiveService.GetPassiveTuple(p, p1, p2, p3).Item2" 
                   src="@($"_content/SurrealCB.CommonUI/icons/{PassiveService.GetPassiveTuple(p, p1, p2, p3).Item2}.svg")" /></div>
        @if (p1 != 0)
        {<div class="uicard-passive-param"> @(p1 + RenderPercentage())  </div>}
        @if (p2 != 0)
        {<div class="uicard-passive-param"> |@p2 </div>}
        @if (p3 != 0)
        {<div class="uicard-passive-param"> |@p3 </div>}
    </div>
</MatTooltip>

@code
{
    [Parameter]
    public CardPassive CPassive { get; set; }
    public Passive p => CPassive.Passive;
    public double p1 => CPassive.Param1;
    public double p2 => CPassive.Param2;
    public double p3 => CPassive.Param3;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

    }

    public string RenderPercentage()
    {
        if (p == Passive.HP_SHATTER || p == Passive.HP_DEFRAGMENTER || p == Passive.DODGE) return "%";
        return "";
    }
}