<MatTooltip Tooltip="@PassiveHelper.GetPassiveTuple(p, p1, p2, p3).Item1">
    <div @ref="context.Current" class="uicard-passive">
        <div>
            <img class="card-icon icon-@PassiveHelper.GetPassiveTuple(p, p1, p2, p3).Item2"
                 src="@($"_content/SurrealCB.CommonUI/icons/{PassiveHelper.GetPassiveTuple(p, p1, p2, p3).Item2}.svg")" />
        </div>
        @if (p1 != 0)
        {<div class="uicard-passive-param"> @(p1 + RenderPercentage())  </div>}
        @if (p2 != 0)
        {<div class="uicard-passive-param"> |@p2 </div>}
        @if (p3 != 0)
        {<div class="uicard-passive-param"> |@p3 </div>}
    </div>
</MatTooltip>

@code
{
    [Parameter]
    public CardPassive CPassive { get; set; }
    public Passive p => CPassive.Passive;
    public double p1 => CPassive.Param1;
    public double p2 => CPassive.Param2;
    public double p3 => CPassive.Param3;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

    }

    public string RenderPercentage()
    {
        var passives = new List<Passive> {
            Passive.SHATTER, Passive.DEFRAGMENTER, Passive.DODGE, Passive.FREEZE, Passive.TOUGH, Passive.BLIND, Passive.OBLIVION, Passive.BURN, Passive.LIFESTEAL,
            Passive.REFLECT, Passive.ELECTRIFY, Passive.DOUBLE_ATTACK, Passive.FLEE, Passive.WINTER, Passive.TRANSFUSE, Passive.TIMESHIFT, Passive.SPIKE_ARMOR, Passive.INTENSIFY, Passive.COLDING
        };
        if (passives.Any(x => x == p)) return "%";
        return "";
    }
}